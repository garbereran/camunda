{"name":"SpringExpressionManager.java","path":"engine-spring/core/src/main/java/org/camunda/bpm/engine/spring/SpringExpressionManager.java","content":{"structured":{"description":"","items":[{"id":"f9fda935-0fee-4502-a5c3-57f56cf9a7e0","ancestors":[],"type":"function","name":"createElResolver","location":{"offset":" ","indent":2,"insert":67,"start":67},"returns":"ELResolver","params":[],"code":"@Override\n  protected ELResolver createElResolver() {\n    CompositeELResolver compositeElResolver = new CompositeELResolver();\n    compositeElResolver.add(new VariableScopeElResolver());\n    compositeElResolver.add(new VariableContextElResolver());\n    compositeElResolver.add(new MockElResolver());\n\n    if(beans != null) {\n      // Only expose limited set of beans in expressions\n      compositeElResolver.add(new ReadOnlyMapELResolver(beans));\n    } else {\n      // Expose full application-context in expressions\n      compositeElResolver.add(new ApplicationContextElResolver(applicationContext));\n    }\n\n    compositeElResolver.add(new ArrayELResolver());\n    compositeElResolver.add(new ListELResolver());\n    compositeElResolver.add(new MapELResolver());\n    compositeElResolver.add(new BeanELResolver());\n\n    return compositeElResolver;\n  }","skip":false,"length":22,"comment":{"description":"","params":[],"returns":{"type":"ELResolver","description":""}}}]}}}